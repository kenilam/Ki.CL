{"version":3,"sources":["CSSUnit.tsx"],"names":["DOM_DEPENDED_UNITS","TIME_UNITS","BASE_UNIT","CSSUnit","values","engine","parse","value","unit","some","dependedUnit","convert","document","querySelector","CSSUnitGroup","style","props","Object","keys","forEach","name","fontSize","maxFontSize"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;AAGA,IAAMA,kBAAkB,GAAG,CAAC,GAAD,EAAM,IAAN,EAAY,IAAZ,EAAkB,IAAlB,CAA3B;AACA,IAAMC,UAAU,GAAG,CAAC,GAAD,EAAM,IAAN,CAAnB;AACA,IAAMC,SAAS,GAAG,IAAlB;;AAEA,SAASC,OAAT,CAAiBC,MAAjB,EAAmC;AAAA,sBACbC,MAAM,CAACC,KAAP,CAAaF,MAAb,CADa;AAAA,MAC5BG,KAD4B,iBAC5BA,KAD4B;AAAA,MACrBC,IADqB,iBACrBA,IADqB;;AAGjC,MAAI,CAACD,KAAL,EAAY;AACV,WAAOH,MAAP;AACD;;AAED,MAAIH,UAAU,CAACQ,IAAX,CAAgB,UAAAC,YAAY;AAAA,WAAIA,YAAY,KAAKF,IAArB;AAAA,GAA5B,CAAJ,EAA4D;AAC1D,WAAOA,IAAI,KAAK,GAAT,GAAeD,KAAK,GAAG,IAAvB,GAA8BA,KAArC;AACD;;AAED,MAAIP,kBAAkB,CAACS,IAAnB,CAAwB,UAAAC,YAAY;AAAA,WAAIA,YAAY,KAAKF,IAArB;AAAA,GAApC,CAAJ,EAAoE;AAClE,WAAOH,MAAM,CAACM,OAAP,CAAeT,SAAf,EAA0BE,MAA1B,EAAkCQ,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAlC,CAAP;AACD;;AAED,SAAOR,MAAM,CAACM,OAAP,CAAeT,SAAf,EAA0BE,MAA1B,CAAP;AACD;;AAED,SAASU,YAAT,CAAsBC,KAAtB,EAA4C;AAC1C,MAAMC,KAAoB,GAAG,EAA7B;AAEAC,EAAAA,MAAM,CAACC,IAAP,CAAYH,KAAZ,EAAmBI,OAAnB,CACE,UAAAC,IAAI,EAAI;AACNJ,IAAAA,KAAK,CAACI,IAAD,CAAL,GAAcjB,OAAO,CAACY,KAAK,CAACK,IAAD,CAAN,CAArB;AACD,GAHH;AAH0C,MASnCC,QATmC,GASVL,KATU,CASnCK,QATmC;AAAA,MASzBC,WATyB,GASVN,KATU,CASzBM,WATyB;;AAW1C,MAAIA,WAAJ,EAAiB;AACfN,IAAAA,KAAK,CAACK,QAAN,GAAiBA,QAAQ,GAAGC,WAAX,GAAyBA,WAAzB,GAAuCD,QAAxD;AACD;;AAED,SAAOL,KAAP;AACD;;eAGcb,O;;;;;;;;;;;;0BAzCTH,kB;0BACAC,U;0BACAC,S;0BAEGC,O;0BAkBAW,Y","sourcesContent":["import * as engine from 'units-css';\nimport * as IHelper from './spec';\n\nconst DOM_DEPENDED_UNITS = ['%', 'ch', 'em', 'ex'];\nconst TIME_UNITS = ['s', 'ms'];\nconst BASE_UNIT = 'px';\n\nfunction CSSUnit(values: any): any {\n  let {value, unit} = engine.parse(values);\n  \n  if (!value) {\n    return values;\n  }\n  \n  if (TIME_UNITS.some(dependedUnit => dependedUnit === unit)) {\n    return unit === 's' ? value * 1000 : value;\n  }\n  \n  if (DOM_DEPENDED_UNITS.some(dependedUnit => dependedUnit === unit)) {\n    return engine.convert(BASE_UNIT, values, document.querySelector('body'));\n  }\n  \n  return engine.convert(BASE_UNIT, values);\n}\n\nfunction CSSUnitGroup(style: IHelper.Style) {\n  const props: IHelper.Style = {};\n  \n  Object.keys(style).forEach(\n    name => {\n      props[name] = CSSUnit(style[name]);\n    }\n  );\n  \n  const {fontSize, maxFontSize} = props;\n  \n  if (maxFontSize) {\n    props.fontSize = fontSize > maxFontSize ? maxFontSize : fontSize;\n  }\n  \n  return props;\n}\n\nexport {CSSUnitGroup};\nexport default CSSUnit;\n"]}