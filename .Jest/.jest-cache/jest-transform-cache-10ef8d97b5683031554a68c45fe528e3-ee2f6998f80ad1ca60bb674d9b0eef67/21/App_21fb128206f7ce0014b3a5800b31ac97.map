{"version":3,"sources":["App.tsx"],"names":["view","resources","paths","Object","keys","filter","name","map","path","appRoot","document","querySelector","App","View"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;IAEOA,I,GAAQC,qB,CAARD,I;AAEP,IAAME,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYJ,IAAZ,EAAkBK,MAAlB,CACZ,UAAAC,IAAI;AAAA,SAAI,WAAWA,IAAf;AAAA,CADQ,EAEZC,GAFY,CAGZ,UAAAD,IAAI;AAAA,SAAIN,IAAI,CAACM,IAAD,CAAJ,CAAWE,IAAf;AAAA,CAHQ,CAAd;AAMA,IAAMC,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAhB;;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM;AAAA,SACV,gCAAC,eAAD,QACE,gCAAC,uBAAD;AAAc,IAAA,iBAAiB,EAAEV;AAAjC,IADF,EAEGW,gBAFH,CADU;AAAA,CAAZ;;eAQeD,G;;;;;;;;;;;;0BAlBRZ,I;0BAEDE,K;0BAMAO,O;0BAEAG,G","sourcesContent":["import resources from '$/resources';\nimport {GlobalHeader} from '@/Component';\nimport React, {Fragment} from 'react';\nimport View from './View';\n\nconst {view} = resources;\n\nconst paths = Object.keys(view).filter(\n  name => 'home' !== name\n).map(\n  name => view[name].path\n);\n\nconst appRoot = document.querySelector('[app-root]');\n\nconst App = () => (\n  <Fragment>\n    <GlobalHeader transitionInPaths={paths} />\n    {View}\n  </Fragment>\n);\n\nexport {appRoot};\nexport default App;\n"]}