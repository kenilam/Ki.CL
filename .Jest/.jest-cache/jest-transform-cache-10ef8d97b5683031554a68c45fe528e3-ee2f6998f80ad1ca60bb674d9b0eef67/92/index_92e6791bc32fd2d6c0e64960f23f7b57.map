{"version":3,"sources":["index.tsx"],"names":["TWEEN_VALUES","IN","value","OUT","Tween","delay","duration","ease","gsap","Back","easeOut","onComplete","onStart","onUpdate","pause","Object","assign","sequence","TimelineMax","bind","values","onReverseComplete","add","TweenMax","set","to","kill","reverse","restart"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;AAIA,IAAMA,YAA2B,GAAG;AAClCC,EAAAA,EAAE,EAAE;AAACC,IAAAA,KAAK,EAAE;AAAR,GAD8B;AAElCC,EAAAA,GAAG,EAAE;AAACD,IAAAA,KAAK,EAAE;AAAR;AAF6B,CAApC;;IAKME,K;;;AAOJ,uBAUE;AAAA,0BAREC,KAQF;AAAA,QAREA,KAQF,2BARU,CAQV;AAAA,QAPEC,QAOF,QAPEA,QAOF;AAAA,yBANEC,IAMF;AAAA,QANEA,IAMF,0BANSC,YAAKC,IAAL,CAAUC,OAMnB;AAAA,QALEC,UAKF,QALEA,UAKF;AAAA,QAJEC,OAIF,QAJEA,OAIF;AAAA,QAHEC,QAGF,QAHEA,QAGF;AAAA,0BAFEC,KAEF;AAAA,QAFEA,KAEF,2BAFU,IAEV;AAAA;AAAA;AAAA;AAAA;AAAA,aAhB4BC,MAAM,CAACC,MAAP,mBAAkBhB,YAAY,CAACC,EAA/B;AAgB5B;AACA,SAAKK,QAAL,GAAgBA,QAAhB;AAEA,SAAKW,QAAL,GAAgB,IAAIT,YAAKU,WAAT,CAAqB;AACnCb,MAAAA,KAAK,EAALA,KADmC;AAEnCC,MAAAA,QAAQ,EAARA,QAFmC;AAGnCK,MAAAA,UAAU,EAAEA,UAAU,IAAIA,UAAU,CAACQ,IAAX,CAAgB,IAAhB,EAAsB,KAAKC,MAA3B,CAHS;AAInCC,MAAAA,iBAAiB,EAAEV,UAAU,IAAIA,UAAU,CAACQ,IAAX,CAAgB,IAAhB,EAAsB,KAAKC,MAA3B,CAJE;AAKnCR,MAAAA,OAAO,EAAEA,OAAO,IAAIA,OAAO,CAACO,IAAR,CAAa,IAAb,EAAmB,KAAKC,MAAxB,CALe;AAMnCP,MAAAA,QAAQ,EAAEA,QAAQ,IAAIA,QAAQ,CAACM,IAAT,CAAc,IAAd,EAAoB,KAAKC,MAAzB,CANa;AAOnCN,MAAAA,KAAK,EAALA;AAPmC,KAArB,CAAhB;AAUA,SAAKG,QAAL,CAAcK,GAAd,CACEd,YAAKe,QAAL,CAAcC,GAAd,CAAkB,KAAKJ,MAAvB,EAA+BpB,YAAY,CAACC,EAA5C,CADF;AAGA,SAAKgB,QAAL,CAAcK,GAAd,CACEd,YAAKe,QAAL,CAAcE,EAAd,CAAiB,KAAKL,MAAtB,EAA8B,KAAKd,QAAnC,oBAAiDN,YAAY,CAACG,GAA9D;AAAmEI,MAAAA,IAAI,EAAJA;AAAnE,OADF;AAGD;;;;2BAEa;AACZ,WAAKU,QAAL,CAAcS,IAAd;AACD;;;4BAEc;AACb,WAAKA,IAAL;AACA,WAAKN,MAAL,GAAcpB,YAAY,CAACC,EAA3B;AACD;;;8BAEgB;AACf,WAAKgB,QAAL,CAAcU,OAAd,CAAsB,CAAtB;AACD;;;4BAEc;AACb,WAAKV,QAAL,CAAcW,OAAd,CAAsB,IAAtB;AACD;;;;;;;;;;;;eAIYxB,K;;;;;;;;;;;;0BA9DTJ,Y;0BAKAI,K","sourcesContent":["import {gsap} from '@/Component/WebGL';\nimport * as IWebGL from '@/Component/WebGL/spec';\nimport * as ITween from '@/View/Home/WebGL/Tween/spec';\n\nconst TWEEN_VALUES: ITween.Values = {\n  IN: {value: 0},\n  OUT: {value: 1},\n};\n\nclass Tween {\n  public values: ITween.Value = Object.assign({...TWEEN_VALUES.IN});\n  \n  public sequence: IWebGL.TweenSequence;\n  \n  private readonly duration: ITween.Duration;\n  \n  constructor(\n    {\n      delay = 0,\n      duration,\n      ease = gsap.Back.easeOut,\n      onComplete,\n      onStart,\n      onUpdate,\n      pause = true\n    }: ITween.Props\n  ) {\n    this.duration = duration;\n    \n    this.sequence = new gsap.TimelineMax({\n      delay,\n      duration,\n      onComplete: onComplete && onComplete.bind(this, this.values),\n      onReverseComplete: onComplete && onComplete.bind(this, this.values),\n      onStart: onStart && onStart.bind(this, this.values),\n      onUpdate: onUpdate && onUpdate.bind(this, this.values),\n      pause\n    });\n    \n    this.sequence.add(\n      gsap.TweenMax.set(this.values, TWEEN_VALUES.IN)\n    );\n    this.sequence.add(\n      gsap.TweenMax.to(this.values, this.duration, {...TWEEN_VALUES.OUT, ease})\n    );\n  }\n  \n  public kill() {\n    this.sequence.kill();\n  }\n  \n  public reset() {\n    this.kill();\n    this.values = TWEEN_VALUES.IN;\n  }\n  \n  public reverse() {\n    this.sequence.reverse(0);\n  }\n  \n  public start() {\n    this.sequence.restart(true);\n  }\n}\n\nexport {gsap}\nexport default Tween;\n"]}