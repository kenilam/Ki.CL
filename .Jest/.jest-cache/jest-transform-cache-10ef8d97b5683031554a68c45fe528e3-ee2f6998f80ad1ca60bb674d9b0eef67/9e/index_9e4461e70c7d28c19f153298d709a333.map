{"version":3,"sources":["index.tsx"],"names":["options","antialias","autoResize","transparent","WebGL","className","height","render","width","rendererFrame","app","updateApp","stage","updateStage","graphics","updateGraphics","renderer","window","requestAnimationFrame","triggerRender","PIXI","Container","removeChildren","map","graphic","addChild","ref","view","autoDetectRenderer","resize","onMount","onUnmount","cancelAnimationFrame","Style","settings","RESOLUTION","devicePixelRatio"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;;;AACA;;AACA;;;;AAEA;;;;;;;;;;;;;;;AAEA,IAAMA,OAAO,GAAG;AACdC,EAAAA,SAAS,EAAE,IADG;AAEdC,EAAAA,UAAU,EAAE,IAFE;AAGdC,EAAAA,WAAW,EAAE;AAHC,CAAhB;;AAMA,IAAMC,KAA4C,GAAG,SAA/CA,KAA+C,OAOhD;AAAA,MALDC,SAKC,QALDA,SAKC;AAAA,MAJDC,MAIC,QAJDA,MAIC;AAAA,MAHDC,MAGC,QAHDA,MAGC;AAAA,MAFDC,KAEC,QAFDA,KAEC;AACH,MAAIC,aAAJ;;AADG,kBAGuC,sBAHvC;AAAA;AAAA,MAGIC,GAHJ;AAAA,MAGSC,SAHT;;AAAA,mBAI6C,sBAJ7C;AAAA;AAAA,MAIIC,KAJJ;AAAA,MAIWC,WAJX;;AAAA,gBAKoDN,MAAM,EAL1D;AAAA;AAAA,MAKIO,QALJ;AAAA,MAKcC,cALd;;AAOH,WAASC,QAAT,GAAoB;AAClB,QAAI,CAACN,GAAD,IAAQ,CAACE,KAAb,EAAoB;AAClB;AACD;;AAEAF,IAAAA,GAAD,CAAuBH,MAAvB,CAA8BK,KAA9B;AAEAH,IAAAA,aAAa,GAAGQ,MAAM,CAACC,qBAAP,CAA6BF,QAA7B,CAAhB;AACD;;AAED,WAASG,aAAT,GAAyB;AACvB,QAAI,CAACP,KAAL,EAAY;AACVC,MAAAA,WAAW,CAAC,IAAIO,IAAI,CAACC,SAAT,EAAD,CAAX;AACA;AACD;;AAEDT,IAAAA,KAAK,CAACU,cAAN,CAAqB,CAArB;AAEAR,IAAAA,QAAQ,CAACS,GAAT,CACE,UAAAC,OAAO,EAAI;AACTZ,MAAAA,KAAK,CAACa,QAAN,CAAeD,OAAf;AACD,KAHH;AAMAT,IAAAA,cAAc,IAAIA,cAAc,CAAC;AAACL,MAAAA,GAAG,EAAHA,GAAD;AAAME,MAAAA,KAAK,EAALA;AAAN,KAAD,CAAhC;AACD;;AAED,MAAMc,GAAG,GAAG,wBAAY,UAACC,IAAD,EAA6B;AACnD,QAAI,CAACA,IAAL,EAAW;AACT;AACD;;AAED,QAAI,CAACjB,GAAL,EAAU;AACRC,MAAAA,SAAS,CACPS,IAAI,CAACQ,kBAAL,mBACK5B,OADL;AAEEM,QAAAA,MAAM,EAANA,MAFF;AAGEE,QAAAA,KAAK,EAALA,KAHF;AAIEmB,QAAAA,IAAI,EAAJA;AAJF,SADO,CAAT;AAQA;AACD;;AAEAjB,IAAAA,GAAD,CAAuBmB,MAAvB,CAA8BrB,KAA9B,EAAqCF,MAArC;AACD,GAlBW,EAkBT,CAACE,KAAD,EAAQF,MAAR,CAlBS,CAAZ;;AAoBA,WAASwB,OAAT,GAAmB;AAEjBd,IAAAA,QAAQ;AAERG,IAAAA,aAAa;AACd;;AAED,WAASY,SAAT,GAAqB;AACnBd,IAAAA,MAAM,CAACe,oBAAP,CAA4BvB,aAA5B;AACD;;AAED,wBAAU,YAAM;AACdqB,IAAAA,OAAO;AAEP,WAAOC,SAAP;AACD,GAJD;AAMA,SACE;AACE,IAAA,SAAS,EAAE1B,SADb;AAEE,sBAAgB4B,4BAFlB;AAGE,IAAA,GAAG,EAAEP;AAHP,IADF;AAOD,CArFD;;cAAMtB,K;;AAuFNgB,IAAI,CAACc,QAAL,CAAcC,UAAd,GAA2BlB,MAAM,CAACmB,gBAAlC;eAGehC,K;;;;;;;;;;;;0BAhGTJ,O;0BAMAI,K","sourcesContent":["import * as gsap from 'gsap';\nimport {TimelineMax, TweenMax} from 'gsap';\nimport * as PIXI from 'pixi.js';\nimport React, {DependencyList, useCallback, useEffect, useState} from 'react';\nimport * as Geometry from './Geometry';\nimport * as IWebGL from './spec';\nimport Style from './Style';\n\nconst options = {\n  antialias: true,\n  autoResize: true,\n  transparent: true\n};\n\nconst WebGL: React.FunctionComponent<IWebGL.Props> = (\n  {\n    className,\n    height,\n    render,\n    width,\n  }\n) => {\n  let rendererFrame: number;\n  \n  const [app, updateApp]: IWebGL.AppState = useState<IWebGL.App>();\n  const [stage, updateStage]: IWebGL.StageState = useState<IWebGL.Stage>();\n  const [graphics, updateGraphics]: IWebGL.RenderState = render();\n  \n  function renderer() {\n    if (!app || !stage) {\n      return;\n    }\n    \n    (app as PIXI.Renderer).render(stage);\n    \n    rendererFrame = window.requestAnimationFrame(renderer);\n  }\n  \n  function triggerRender() {\n    if (!stage) {\n      updateStage(new PIXI.Container());\n      return;\n    }\n    \n    stage.removeChildren(0);\n    \n    graphics.map(\n      graphic => {\n        stage.addChild(graphic);\n      }\n    );\n    \n    updateGraphics && updateGraphics({app, stage});\n  }\n  \n  const ref = useCallback((view: HTMLCanvasElement) => {\n    if (!view) {\n      return;\n    }\n    \n    if (!app) {\n      updateApp(\n        PIXI.autoDetectRenderer({\n          ...options,\n          height,\n          width,\n          view\n        }) as PIXI.Renderer\n      );\n      return;\n    }\n    \n    (app as PIXI.Renderer).resize(width, height);\n  }, [width, height] as DependencyList);\n  \n  function onMount() {\n    \n    renderer();\n    \n    triggerRender();\n  }\n  \n  function onUnmount() {\n    window.cancelAnimationFrame(rendererFrame);\n  }\n  \n  useEffect(() => {\n    onMount();\n    \n    return onUnmount;\n  });\n  \n  return (\n    <canvas\n      className={className}\n      data-component={Style.default}\n      ref={ref}\n    />\n  );\n};\n\nPIXI.settings.RESOLUTION = window.devicePixelRatio;\n\nexport {PIXI, Geometry, TweenMax as Tween, TimelineMax as TweenSequence, gsap};\nexport default WebGL;\n"]}