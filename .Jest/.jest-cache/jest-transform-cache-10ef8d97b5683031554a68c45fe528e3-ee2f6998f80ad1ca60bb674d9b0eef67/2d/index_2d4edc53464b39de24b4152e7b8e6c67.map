{"version":3,"sources":["index.tsx"],"names":["AudioPlayer","url","index","tracks","updateTracks","controller","AbortController","signal","window","fetch","then","response","json","abort","process","env","API_URL"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;AAGA,IAAMA,WAAW,GAAG,SAAdA,WAAc,OAAyB;AAAA,MAAvBC,GAAuB,QAAvBA,GAAuB;;AAAA,kBACR,qBAAS,CAAT,CADQ;AAAA;AAAA,MACpCC,KADoC;;AAAA,mBAEQ,sBAFR;AAAA;AAAA,MAEpCC,MAFoC;AAAA,MAE5BC,YAF4B;;AAI3C,MAAMC,UAAU,GAAG,IAAIC,eAAJ,EAAnB;AAJ2C,MAKpCC,MALoC,GAK1BF,UAL0B,CAKpCE,MALoC;AAO3C,wBACE,YAAM;AACJ,QAAIJ,MAAJ,EAAY;AACV;AACD;;AAEDK,IAAAA,MAAM,CAACC,KAAP,CAAaR,GAAb,EAAkB;AAACM,MAAAA,MAAM,EAANA;AAAD,KAAlB,EACCG,IADD,CAEE,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KAFV,EAICF,IAJD,CAKE,UAAAP,MAAM,EAAI;AACRC,MAAAA,YAAY,CAACD,MAAD,CAAZ;AACD,KAPH;AAUA,WAAO,YAAM;AACXE,MAAAA,UAAU,CAACQ,KAAX;AACD,KAFD;AAGD,GAnBH,EAoBE,CAACV,MAAD,CApBF;AAuBA,SACE;AAAO,IAAA,QAAQ,EAAE,KAAjB;AAAwB,IAAA,QAAQ,EAAE;AAAlC,KACE;AAAQ,IAAA,GAAG,YAAKW,OAAO,CAACC,GAAR,CAAYC,OAAjB,SAA2Bb,MAAM,GAAGA,MAAM,CAACD,KAAD,CAAN,CAAcD,GAAjB,GAAuB,IAAxD,CAAX;AAA2E,IAAA,IAAI,EAAC;AAAhF,IADF,CADF;AAKD,CAnCD;;cAAMD,W;;eAqCSA,W;;;;;;;;;;;;0BArCTA,W","sourcesContent":["import React, {DependencyList, useEffect, useState} from 'react';\nimport * as IAudio from './spec';\n\nconst AudioPlayer = ({url}: IAudio.Props) => {\n  const [index]: IAudio.IndexState = useState(0);\n  const [tracks, updateTracks]: IAudio.TracksState = useState();\n  \n  const controller = new AbortController();\n  const {signal} = controller;\n  \n  useEffect(\n    () => {\n      if (tracks) {\n        return;\n      }\n      \n      window.fetch(url, {signal})\n      .then(\n        response => response.json()\n      )\n      .then(\n        tracks => {\n          updateTracks(tracks);\n        }\n      );\n      \n      return () => {\n        controller.abort();\n      };\n    },\n    [tracks] as DependencyList\n  );\n  \n  return (\n    <video controls={false} autoPlay={true}>\n      <source src={`${process.env.API_URL}${tracks ? tracks[index].url : null}`} type='audio/mpeg' />\n    </video>\n  );\n};\n\nexport default AudioPlayer;\n"]}