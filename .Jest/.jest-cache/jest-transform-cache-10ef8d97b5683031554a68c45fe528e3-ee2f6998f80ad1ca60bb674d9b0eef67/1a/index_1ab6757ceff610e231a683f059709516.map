{"version":3,"sources":["index.tsx"],"names":["resources","view","DEFAULT_ITEMS","Object","keys","map","viewName","name","path","children","to","filter","Boolean","home","Navigation","className","inline","items","onClick","Style","event","preventDefault"],"mappings":";;;;;;;;;;;;;;;;;;;AAEA;;AAEA;;AACA;;AACA;;AACA;;;;;;;;;;;iBAEeA,S;IAARC,I,cAAAA,I;AAEP,IAAMC,aAAgC,GAAGC,MAAM,CAACC,IAAP,CAAYH,IAAZ,EAAkBI,GAAlB,CACvC,UAACC,QAAD,EAAc;AAAA,uBACSL,IAAI,CAACK,QAAD,CADb;AAAA,MACLC,IADK,kBACLA,IADK;AAAA,MACCC,IADD,kBACCA,IADD;AAGZ,SAAO;AACLC,IAAAA,QAAQ,EAAEF,IADL;AAELG,IAAAA,EAAE,EAAEF;AAFC,GAAP;AAID,CARsC,EASvCG,MATuC,CAShC;AAAA,MAAED,EAAF,QAAEA,EAAF;AAAA,SAAUE,OAAO,CAACF,EAAD,CAAP,IAAeA,EAAE,KAAKT,IAAI,CAACY,IAAL,CAAUL,IAA1C;AAAA,CATgC,CAAzC;;AAWA,IAAMM,UAAsD,GAAG,SAAzDA,UAAyD;AAAA,MAAEC,SAAF,SAAEA,SAAF;AAAA,2BAAaC,MAAb;AAAA,MAAaA,MAAb,6BAAsB,KAAtB;AAAA,MAA6BC,KAA7B,SAA6BA,KAA7B;AAAA,MAAoCC,OAApC,SAAoCA,OAApC;AAAA,SAC7D;AACE,IAAA,SAAS,EAAE,4BACTH,SADS,EAET;AACE,mBAAaC;AADf,KAFS,CADb;AAOE,sBAAgBG,4BAPlB;AAQE,IAAA,IAAI,EAAC;AARP,KAWI,CAACF,KAAK,IAAIf,aAAV,EAAyBG,GAAzB,CACE;AAAA,QAAEI,QAAF,SAAEA,QAAF;AAAA,QAAYC,EAAZ,SAAYA,EAAZ;AAAA,WACE,gCAAC,eAAD;AACE,MAAA,EAAE,EAAEA,EADN;AAEE,MAAA,OAAO,EAAEQ,OAAO,IAAK,UAAAE,KAAK,EAAI;AAC5BA,QAAAA,KAAK,CAACC,cAAN;AACAH,QAAAA,OAAO,CAACE,KAAD,EAAQV,EAAR,CAAP;AACD,OALH;AAME,MAAA,GAAG,EAAE;AANP,OAQGD,QARH,CADF;AAAA,GADF,CAXJ,CAD6D;AAAA,CAA/D;;eA8BeK,U;;;;;;;;;;;;0BA3CRb,I;0BAEDC,a;0BAWAY,U","sourcesContent":["import data from '$resources/data.json';\nimport IResources from '$resources/spec';\nimport {Link} from '@/Component';\nimport * as INavigation from '@/Component/Navigation/spec';\nimport {RandomId} from '@/Helper';\nimport classnames from 'classnames';\nimport React from 'react';\nimport Style from './Style';\n\nconst {view} = resources;\n\nconst DEFAULT_ITEMS: INavigation.Links = Object.keys(view).map(\n  (viewName) => {\n    const {name, path} = view[viewName];\n    \n    return {\n      children: name,\n      to: path\n    };\n  }\n).filter(({to}) => Boolean(to) && to !== view.home.path);\n\nconst Navigation: React.FunctionComponent<INavigation.Props> = ({className, inline = false, items, onClick}) => (\n  <nav\n    className={classnames(\n      className,\n      {\n        'is-inline': inline\n      }\n    )}\n    data-component={Style.default}\n    role='navigation'\n  >\n    {\n      (items || DEFAULT_ITEMS).map(\n        ({children, to}) => (\n          <Link\n            to={to}\n            onClick={onClick && (event => {\n              event.preventDefault();\n              onClick(event, to);\n            })}\n            key={RandomId()}\n          >\n            {children}\n          </Link>\n        )\n      )\n    }\n  </nav>\n);\n\nexport default Navigation;\n"]}