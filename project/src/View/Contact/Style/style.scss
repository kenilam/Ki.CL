[data-routes='contact'] {
  $css-transition: get($component-css-transition, 'default');
  $appear: get($component-css-transition, 'appear.default');
  $appear-active: get($component-css-transition, 'appear.active');
  $enter: get($component-css-transition, 'enter.default');
  $enter-active: get($component-css-transition, 'enter.active');
  $exit: get($component-css-transition, 'exit.default');
  $exit-active: get($component-css-transition, 'exit.active');
  $exit-done: get($component-css-transition, 'exit.active');

  $background-color: get($black, 'light');
  $text-color: get($white, 'default');
  $space: get($grid, 'narrow');
  $gutter: get($grid, 'default');
  $gap: get($grid, 'gutter');

  background-color: $background-color;
  color: $text-color;

  form {
    display: grid;
    grid-template-areas:
      '. . . .'
      'h1 message message message'
      'p message message message'
      'name message message message'
      'email message message message'
      '. message message message'
      '. submit submit reset';
    grid-template-columns: 400px repeat(3, 1fr);
    grid-template-rows: auto repeat(4, min-content) auto $gutter;
    min-height: 100vh;
    padding: get($grid, 'wide') + $gutter 0 0 $gutter;

    @include mobile() {
      grid-template-areas:
        '. h1 h1 .'
        '. p p .'
        '. name name .'
        '. email email .'
        '. message message .'
        'submit submit reset reset';
      grid-template-columns: $gap repeat(2, 1fr) $gap;
      grid-template-rows: repeat(4, min-content) auto $gutter;
      padding-left: 0;
      padding-right: 0;
    }
  }

  h1,
  p,
  [for=name],
  [for=email] {
    margin-right: $gutter;

    @include mobile() {
      margin-right: 0;
    }
  }

  [for=name],
  [for=email] {
    border-bottom: 1px solid get($white, 'default');

    @include mobile() {
      margin-top: $space;
    }
  }

  [type=submit],
  [type=reset] {
    @include shadow-top();

    bottom: 0;
    position: sticky;
  }

  input,
  textarea {
    font-weight: get($font, 'font-weight.bolder');
    padding: $space;
  }

  input {
    font-size: get($font, 'font-size.medium');
    width: 100%;

    @include mobile() {
      font-size: unset;
    }
  }

  textarea {
    resize: none;
  }

  h1 {
    font-size: get($font, 'font-size.largest');
    font-weight: get($font, 'font-weight.bolder');
    line-height: get($font, 'line-height.narrow');
    grid-area: h1;

    @include mobile() {
      font-size: get($font, 'font-size.medium');
    }
  }

  p {
    font-size: get($font, 'font-size.small');
    grid-area: p;
    margin-bottom: $space;
    margin-top: $space;
  }

  span {
    color: get($grey, 'dark');
    font-size: get($font, 'font-size.small');

    @include mobile() {
      position: absolute;
      height: 0;
      opacity: 0;
      overflow: hidden;
      width: 0;
    }
  }

  label {
    display: grid;
    grid-template-columns: auto;
    grid-template-rows: min-content auto;

    @include mobile() {
      grid-template-columns: auto;
      grid-template-rows: auto;
    }
  }

  [for=name] {
    grid-area: name;
  }

  [for=email] {
    grid-area: email;
    margin-top: $gap;

    @include mobile() {
      margin-top: 0;
    }
  }

  [for=message] {
    border-left: 1px solid get($white, 'default');
    grid-area: message;

    span {
      padding: 0 $space;

      @include mobile() {
        padding: 0;
        padding-bottom: $space;
      }
    }

    @include mobile() {
      border: 1px solid get($white, 'default');
      margin-bottom: $gap;
      margin-top: $gap;
      min-height: 200px;
      padding-bottom: 0;
    }
  }

  [type=submit] {
    background-color: $green;
    color: get($black, 'default');
    grid-area: submit;
  }

  [type=reset] {
    background-color: get($grey, 'darkest');
    color: $red;
    grid-area: reset;
  }
}
