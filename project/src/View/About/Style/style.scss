$cssTransition: get($css-transition, 'default');
$appear: get($css-transition, 'appear.default');
$appear-active: get($css-transition, 'appear.active');
$enter: get($css-transition, 'enter.default');
$enter-active: get($css-transition, 'enter.active');
$exit: get($css-transition, 'exit.default');
$exit-active: get($css-transition, 'exit.active');
$exit-done: get($css-transition, 'exit.active');

$transition-duration: get($duration, 'fast');
$transition-delay: get($duration, 'fastest');
$transition-delay-alternative-component: get($duration, 'faster');

$close-button: get($component-close-button, 'default');
$navigation: get($component-navigation, 'default');
$logo: get($component-logo, 'default');
$spinner: get($component-spinner, 'default');

$background-color: get($black, 'light');
$background-opacity: 0.5;
$color: get($white, 'default');
$bleed: get($grid, 'default');
$gap: get($grid, 'gutter');
$space: get($grid, 'space');
$max-width: get($grid, 'default') * 10;
$underlay-background-color: get($black, 'pure');
$grid-template-areas: 'close-button close-button . .' '. . . .' '. logo logo .' '. h2 h2 .' '. content content .' '. go-home go-home .' '. . . .' '. . . .';
$grid-template-rows: min-content auto max-content max-content max-content max-content auto $bleed;

[data-routes='about'] {
  background-color: $background-color;
  color: $color;
  position: relative;
  z-index: 2000;

  [data-component=#{$logo}],
  h2,
  p {
    justify-self: center;
  }

  article {
    display: grid;
    grid-gap: $gap;
    grid-template-areas: $grid-template-areas;
    grid-template-columns: $gap auto auto $gap;
    grid-template-rows: $grid-template-rows;
    max-width: 100%;
    min-height: 100vh;

    &.#{$cssTransition} {
      &.#{$appear-active},
      &.#{$enter-active},
      &.#{$exit-active} {
        transition-duration: get($duration, 'normal');
      }

      &.#{$appear}:not(.#{$appear-active}),
      &.#{$enter}:not(.#{$enter-active}),
      &.#{$exit}.#{$exit-active},
      &.#{$exit-done} {
        opacity: 0;
        transform: translate3d(0, -$gap, 0);
      }
    }
  }

  h2 {
    grid-area: h2;
    justify-self: center;
  }

  p {
    grid-area: content;
    max-width: $max-width;
    text-align: center;
  }

  [data-component=#{$close-button}] {
    grid-area: close-button;
    justify-self: start;
  }

  article > [data-component=#{$navigation}] {
    grid-area: go-home;
    justify-self: center;
  }

  [data-component=#{$logo}] {
    grid-area: logo;
  }

  [data-component=#{$spinner}] {
    color: $color;
  }

  body:not([data-exited-routes]) & {
    [data-component=#{$close-button}] {
      opacity: 0;
      pointer-events: none;
    }
  }

  @include tablet() {
    article {
      grid-template-areas: $grid-template-areas;
      grid-template-columns: $space auto auto $space;
      grid-template-rows: $grid-template-rows;
    }
  }

  &.#{$cssTransition} {
    &::before {
      background-color: $underlay-background-color;
      content: '\0020';
      height: 100vh;
      opacity: $background-opacity;
      position: absolute;
      transform: translate3d(-100%, 0, 0);
      transition-duration: $transition-duration;
      transition-property: opacity;
      width: 100vw;
    }
  }
}

[data-entered-routes='about'],
[data-exited-routes='about'] {
  main {
    &.#{$appear-active},
    &.#{$enter-active},
    &.#{$exit-active} {
      transition-duration: $transition-duration;
      transition-property: opacity, transform;
      will-change: opacity, transform;
    }
  }
}

[data-entered-routes='about'] {
  main {
    &.#{$appear} {
      &:not(.#{$appear-active}) {
        opacity: 0;
      }
    }

    &.#{$enter} {
      transition-delay: $transition-delay;
      z-index: 2000;

      &:not(.#{$enter-active}) {
        transform: translate3d(100%, 0, 0);

        &::before {
          opacity: 0;
        }
      }
    }

    &.#{$exit} {
      z-index: 100;

      &.#{$exit-active} {
        opacity: 1;
        transform: translate3d(-10%, 0, 0);
        transition-delay: $transition-delay-alternative-component;
      }
    }
  }
}

[data-exited-routes='about'] {
  main {
    &.#{$enter} {
      z-index: 100;

      &:not(.#{$enter-active}) {
        opacity: 1;
        transform: translate3d(-10%, 0, 0);
      }
    }

    &.#{$exit} {
      z-index: 2000;

      &.#{$exit-active} {
        transform: translate3d(100%, 0, 0);

        &::before {
          opacity: 0;
        }
      }
    }
  }
}
