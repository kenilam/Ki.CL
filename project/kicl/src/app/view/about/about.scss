@import '_import';

[data-route=about] {
	.globalHeader {
		&.isScrolled {
			background: rgba($black, .9);
		}
	}

	.logo {
		a {
			color: $white;
		}
	}

	.hamburgerButton {
		line {
			stroke: $white;
		}
	}

	nav {
		@include mobile () {
			background-color: $black;
		}
	}
}

main {
	&[data-route=about] {
		@include display(flex);
		@include flex-direction(column);
		@include align-items(center);

		.background,
		.overground {
			display: block;
			height: 100%;
			left: 0;
			position: fixed;
			top: 0;
			width: 100%;
			z-index: 0;
		}

		> h1,
		> h2,
		> ul {
			position: relative;
			z-index: 1;
		}

		> h1,
		> h2 {
			color: $white;
		}

		[data-api='behance.user'],
		> ul {
			background-color: $white;
			margin: rem($gutter);
			max-width: grid-size($tablet-size);
			padding: rem($gutter);
			width: calc(100% - #{rem($gutter * 2)});
		}

		[data-api='behance.user.info'],
		[data-api='behance.user.about'],
		[data-api='behance.user.stats'] {
			max-width: grid-size($largemobile-size);
		}

		> h1 {
			@include set-font-size(1.4);

			margin-top: rem($gutter);
		}

		> h2 {
			margin-top: rem($space);
		}

		.background {
			background-attachment: fixed;
			background-position: center;
			background-repeat: no-repeat;
			background-size: cover;
		}

		.overground {
			@include backdrop-filter(blur(5px));
			
			background-color: rgba($black, .8);
			background-image: url('#{$image_path}pattern/half.tone.png');
			background-position: center;
			background-repeat: repeat;
		}

		[data-api='behance.user'] {
			@include display(flex);
			@include flex-direction(column);
			@include align-items(center);

			@include box-shadow($shadow-center);

			position: relative;
			margin-top: grid-size(1);
			z-index: 1;

			ul {
				@include pills();

				border-top: 1px dashed $grey;
				margin-top: rem($gutter);
				padding-top: rem($gutter);

				li {
					@include box-shadow($shadow-center);

					background-color: $darker_grey;
					color: $white;
				}
			}
		}

		[data-api='behance.user.info'] {
			border-bottom: 1px dashed $grey;
			margin-bottom: rem($gutter);
			padding-bottom: rem($gutter);
			text-align: center;
			width: 100%;

			.fn {
				@include set-font-size(1.4);
				font-family: $heading_font_family;
			}
		}

		[data-api='behance.user.avatar'] {
			@include circle(grid-size(2));

			@include box-shadow($shadow-center);

			background-color: $grey;
			border: rem($space) solid $white;
			margin-top: grid-size(-.75);
			position: relative;
		}

		[data-api='behance.experience'] {
			@include display(flex);
			@include flex-wrap(wrap);

			li {
				text-align: center;
				padding: rem($space);
				width: 50%;

				@include largemobile () {
					width: 100%;
				}

				&:first-child {
					padding-top: 0;
					width: 100%;
				}

				&:not(:first-child) {
					@include largemobile () {
						@include hidden();
					}
				}

				+ li {
					border-top: 1px dashed $grey;
					margin-top: rem($space);
				}

				.period {
					@include largemobile () {
						@include hidden();
					}
				}
			}
		}

		.aboutSite {
			@include display(flex);
			@include flex-direction(column);
			@include align-items(center);

			li {
				border-bottom: 1px dashed $grey;
				margin-bottom: rem($gutter);
				padding-bottom: rem($gutter);
				width: 100%;

				&:last-child {
					border-bottom: 0;
					margin-bottom: 0;
					padding-bottom: 0;
				}
			}

			figure {
				@include display(flex);
				@include align-items(center);

				@include mobile () {
					@include flex-direction(column);

					text-align: center;
				}
			}

			figcaption {
				@include smallmobile () {
					@include hidden();
				}
			}

			a {
				max-width: grid-size(2);

				min-width: grid-size(2);
			}

			img {
				width: 100%;
			}

			blockquote {
				footer {
					padding-top: rem($gutter);
				}

				p {
					@include largemobile() {
						@include multiline-truncate(3);
					}

					+ p {
						display: block;
						padding-top: rem($space);

						@include largemobile() {
							@include hidden();
						}
					}
				}

				a {
					max-width: inherit;
				}
			}
		}

		&.ng-animate {
			> * {
				@include set-transition(opacity, transform);
			}
		}

		&.ng-enter {
			> * {
				@include transition-delay($fast);
				@include opacity(0);
				@include transform(scale(1.2));
			}

			&.ng-enter-active {
				> * {
					@include opacity(1);
					@include transform(scale(1));
				}
			}
		}
	}
}


