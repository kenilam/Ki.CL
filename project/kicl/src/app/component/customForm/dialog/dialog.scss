@import '_import';

.customFormDialog {
	@include display(flex);
	@include align-items(center);
	@include justify-content(center);

	height: 100%;
	left: 0;
	position: fixed;
	top: 0;
	width:  100%;
	z-index: 1;

	.wrapper {
		@include box-shadow($shadow-center);
		
		background-color: $white;
		max-width: grid-size($largemobile-size);
		padding: rem($gutter);
		position: relative;
		text-align: center;
		width: 80%;
		z-index: 2;

		@include mobile () {
			@include box-shadow(none);

			background-color: transparent;
			width: 100%;
		}

		h1,
		h2,
		h3 {
			color: $darker_grey;
		}

		h2,
		ul {
			@include mobile () {
				@include hidden();
			}
		}

		h1 {
			@include set-font-size(1.8);

			padding-bottom: 0;
			padding-top: 0;

			@include mobile () {
				@include set-font-size(1.6);
			}

			+ p {
				margin-top: rem($space);
				margin: 0 auto;
				max-width: grid-size($largemobile-size);
			}
		}

		p {
			color: $dark_grey;
		}

		h2 {
			border-top: 1px dashed $darker_grey;
			margin: 0 auto;
			margin-top: rem($gutter);
			max-width: grid-size($largemobile-size);
			padding: rem($space) 0;
		}

		ul {
			margin: 0 auto;
			max-width: grid-size($largemobile-size);
		}

		li {
			@include display(flex);

			margin: 0 auto;
			max-width: grid-size($mobile-size);

			+ li {
				margin-top: rem($space);
			}

			h3 {
				@include truncate(30%);

				padding-right: rem($space / 2);
				text-align: right;
			}

			p {
				padding-left: rem($space / 2);
				text-align: left;
				width: 70%;
			}

			&:not[data-report-name=message] {
				p {
					@include truncate(70%);
				}
			}

			&[data-report-name=message] {
				p {
					@include multiline-truncate(3);
				}
			}
		}
	}

	.error {
		h1,
		h2,
		h3 {
			color: darken($red, 20%);
		}

		ul,
		h2 {
			border-color: $red;
		}

		p {
			color: $red;
		}
	}

	.success {
		h1,
		h2 {
			color: darken($green, 20%);
		}
	}

	.close {
		@include backdrop-filter(blur(5px));

		background-color: rgba($black, .9);
		background-image: url('#{$image_path}pattern/half.tone.png');
		background-position: center;
		background-repeat: repeat;
		cursor: -webkit-zoom-out;
		left: 0;
		height: 100%;
		position: absolute;
		top: 0;
		outline: none;
		width: 100%;
		z-index: 1;

		@include mobile () {
			background-color: $white;
		}

		span {
			@include opacity(0);
		}
	}

	svg {
		@include set-transition(opacity);

		cursor: pointer;
		height: 64px;
		right: 0;
		position: absolute;
		top: 0;
		width: 64px;

		@include mobile () {
			left: 0;
			right: auto;
		}
	}

	line {
		@include set-transition(stroke);

		stroke: $white;

		@include mobile () {
			stroke: $black;
		}
	}

	&.ng-hide-animate {
		@include set-transition(backdrop-filter, opacity);

		clip-rule: nonzero;
		overflow: hidden;

		.wrapper {
			@include set-transition(opacity, transform);
			@include transition-timing-function($ease-out-back);
		}
	}

	&.ng-hide-add {
		@include transition-delay($fast);
		
		@include opacity(1);

		.wrapper {
			@include transition-duration($fast);
			
			@include transform(scale3d(1, 1, 1));

			@include opacity(1);

			@include mobile () {
				@include transform(scale3d(1, 1, 1));
			}
		}

		&.ng-hide-add-active {
			@include opacity(0);

			.wrapper {
				@include transform(scale3d(1.1, 1.1, 1.1));

				@include opacity(0);

				@include mobile () {
					@include transform(scale3d(1.1, 1.1, 1.1));
				}
			}
		}
	}

	&.ng-hide-remove {
		@include opacity(0);

		.wrapper {
			@include transition-delay($fast);

			@include transform(scale3d(1.2, 1.2, 1.2));

			@include opacity(0);
				
			@include mobile () {
				@include transform(scale3d(1.1, 1.1, 1.1));
			}
		}

		&.ng-hide-remove-active {
			@include opacity(1);

			.wrapper {
				@include transform(scale3d(1, 1, 1));

				@include opacity(1);
				
				@include mobile () {
					@include transform(scale3d(1, 1, 1));
				}
			}
		}
	}
}