@import '_import';

.globalHeader {
	@include set-transition(background-color, opacity, padding);

	@include display(flex);
	@include align-items(stretch);
	@include justify-content(space-between);

	.navigationWrapper,
	.breadcrumb {
		padding: rem($space);
	}

	.navigation {
		@include set-transition(transform, opacity);
		@include transition-duration($fast);
		@include transition-timing-function($ease-out-back);

		margin-right: rem($gutter);

		@include largemobile() {
			@include transition-duration($fast);
			@include transition-timing-function($ease-in-expo);

			@include align-items(flex-start);

			background-color: $white;
			height: 100vh;
			left: 0;
			margin-right: 0;
			position: absolute;
			top: 0;
			width: 100%;
			z-index: 1;

			ul {
				@include set-transition(transform, opacity);
				@include transition-timing-function($ease-out-back);
				@include transition-delay($faster);

				@include flex-direction(column);
				@include align-items(center);

				@include transform(translate3d(0, #{grid-size(2)}, 0) scale3d(1, 1, 1));

				position: relative;
				width: 100%;
			}

			li {
				padding: 0 rem($gutter);

				+ li {
					margin-left: 0;
					margin-top: rem($gutter);
				}
			}

			a {
				@include set-font-size(1.5);
			}
		}
	}

	.logo {
		@include align-self(flex-start);

		@include order(1);

		position: relative;
		z-index: 2;
	}

	.navigationWrapper {
		@include display(flex);
		@include flex-direction(row-reverse);
		@include align-items(center);
		@include justify-content(center);

		@include order(3);

		padding: 0;
		right: rem($gutter);
		z-index: 1;

		@include largemobile() {
			@include flex-direction(column);
			@include align-items(flex-end);
		}

		button {
			position: relative;
			z-index: 2;
		}

		&.isClosed {
			.navigation {
				@include transform(translate3d(100%, 0, 0));
				@include opacity(0);

				@include through();


				@include largemobile() {
					@include transition-delay($faster);

					@include transform(translate3d(0, 0, 0));

					ul {
						@include transition-delay(0s);

						@include transform(translate3d(0, #{grid-size(2.5)}, 0) scale3d(.3, .3, .3));
						
						@include opacity(0);
					}
				}
			}
		}

		&:not(.isClosed) {
			+ .breadcrumb {
				@include through();

				overflow: hidden;
				padding: 0;
				width: 0px;
			}
		}
	}

	.breadcrumb {
		@include order(2);

		@include largemobile() {
			@include hidden();
		}
	}

	&.isScrolled {
		@include box-shadow($shadow-center);

		background-color: $white;

		.logo {
			@include set-logo-size(1.5);
		}
	}

	&.ng-hide-add,
	&.ng-hide-remove {
		@include through();
	}

	&.ng-hide-add {
		@include opacity(1);

		&.ng-hide-add-active {
			@include opacity(0);
		}
	}

	&.ng-hide-remove {
		@include transition-delay($speed);
		
		@include opacity(0);

		&.ng-hide-remove-active {
			@include opacity(1);
		}
	}
}

